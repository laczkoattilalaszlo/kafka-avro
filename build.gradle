import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'java'
	id 'com.github.davidmc24.gradle.plugin.avro-base' version '1.7.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven  {
		url 'https://packages.confluent.io/maven/'	// This repository is needed for Confluent related dependencies.
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro:1.11.0'
	implementation 'io.confluent:kafka-avro-serializer:7.3.3'
	implementation 'io.confluent:kafka-schema-registry:7.3.3'
	implementation 'io.confluent:kafka-schema-registry-client:7.3.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.register("generateAvro", GenerateAvroJavaTask) {	// It generates the source files from the avro files.
	source("src/main/resources/avro")
	outputDir = file("$buildDir/generated/avro")
}

tasks.named("compileKotlin").configure {
	it.dependsOn("generateAvro")	// Sets that, the avro generation should run before compilation.
}

sourceSets {
	main {
		java {
			srcDir("build/generated/avro")	// Set the output folder for generated classes as source folder for compilation.
		}
	}
}

configurations {
	all {
		exclude group: 'ch.qos.logback', module: 'logback-classic'	// Solves 'Class path contains multiple SLF4J providers.' error when starting the application.
	}
}